name: Generate configuration files

permissions: write-all

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      SOURCE_BRANCH:
        description: '选择源码'
        required: true
        default: 'vipshmily-immortalwrt'
        type: choice
        options:
          - 'openwrt'
          - 'lede'
          - 'immortalwrt'
          - 'Lienol'
          - 'padavanonly-immortalwrt'
          - 'vipshmily-immortalwrt'
      REPO_BRANCH:
        description: '选择分支'
        required: true
        default: 'main'
        type: choice
        options:
          - 'main'
          - 'master'
          - 'openwrt-21.02'
          - 'openwrt-23.05'
      SSH_ACTION:
        description: 'SSH connection to Actions'
        required: true
        default: true
        type: boolean
  #schedule:
    #- cron:  '30 16 * * 5'

env:
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: config/${{ inputs.SOURCE_BRANCH }}/diy-part1.sh
  DIY_P2_SH: config/${{ inputs.SOURCE_BRANCH }}/diy-part2.sh
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
        sudo docker image prune --all --force
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code [ ${{ inputs.SOURCE_BRANCH }} ]
      working-directory: /workdir
      run: |
        if [ "${{ inputs.SOURCE_BRANCH }}" = "openwrt" ]; then
            REPO_URL="https://github.com/openwrt/openwrt"
            REPO_BRANCH="${{ inputs.REPO_BRANCH }}"
        elif [ "${{ inputs.SOURCE_BRANCH }}" = "lede" ]; then
              REPO_URL="https://github.com/coolsnowwolf/lede"
              REPO_BRANCH="${{ inputs.REPO_BRANCH }}"
        elif [ "${{ inputs.SOURCE_BRANCH }}" = "immortalwrt" ]; then
              REPO_URL="https://github.com/immortalwrt/immortalwrt"
              REPO_BRANCH="${{ inputs.REPO_BRANCH }}"
        elif [ "${{ inputs.SOURCE_BRANCH }}" = "Lienol" ]; then
              REPO_URL="https://github.com/Lienol/openwrt"
              REPO_BRANCH="${{ inputs.REPO_BRANCH }}"
        elif [ "${{ inputs.SOURCE_BRANCH }}" = "padavanonly-immortalwrt" ]; then
              REPO_URL="https://github.com/padavanonly/immortalwrt"
              REPO_BRANCH="${{ inputs.REPO_BRANCH }}"
        elif [ "${{ inputs.SOURCE_BRANCH }}" = "vipshmily-immortalwrt" ]; then
              REPO_URL="https://github.com/vipshmily/immortalwrt"
              REPO_BRANCH="${{ inputs.REPO_BRANCH }}"
        else
              echo "Unknown source code repository."
              exit 1
        fi
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a 

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        #[ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: SSH connection to Actions
      uses: vipshmily/ssh2actions@main
      if: (github.event.inputs.SSH_ACTION == 'true' && github.event.inputs.SSH_ACTION  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
    
    - name: Generate configuration files
      id: organize_config
      run: |
        cd openwrt
        rm -f .config.old
        make defconfig
        mkdir -p /tmp/upload/config
        ./scripts/diffconfig.sh > /tmp/upload/config/seed.config
        echo "status=success" >> $GITHUB_OUTPUT
        echo "FILE_DATE=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_ENV

    - name: Upload the configuration file
      if: steps.organize_config.outputs.status == 'success' && !cancelled()
      uses: actions/upload-artifact@main
      with:
        name: openwrt-config-${{ env.FILE_DATE }}
        path: /tmp/upload

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@main
      with:
        retain_days: 0
        keep_minimum_runs: 2

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@master
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 5
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}